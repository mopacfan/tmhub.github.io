{"name":"Tmhub.github.io","tagline":"","body":"## Magento Installation\r\n1. Create `magento/htdocs` folders in your web-server public folder.\r\n2. Clone [Speedupmate Magento repository](https://github.com/speedupmate/Magento-CE-Mirror) inside and checkout to the latest Magento version tag:\r\n ```\r\ncd PUBLIC_FOLDER/magento/htdocs\r\ngit init\r\ngit remote add speedupmate git@github.com:speedupmate/Magento-CE-Mirror.git\r\ngit fetch speedupmate\r\ngit checkout magento-ce-1.9.0.1\r\n ```\r\n\r\n3. Create `.gitignore` file in `magento/htdocs` folder and place asterisk(`*`) as file content to ignore generated cache, images and Templates-Master's modules.\r\n4. Install sample data and Magento as usual.\r\n5. Navigate to backend `System > Configuration > Developer > Template Settings` and set `Allow Symlinks` option to \"Yes\".\r\n6. Enable logs at `System > Configuration > Developer > Log Settings` configuration.\r\n7. Enable error reporting by creating a renamed copy of `MAGENTO_ROOT/errors/local.xml.sample`. Duplicate this file and rename duplicate to `local.xml`.\r\n\r\n## Composer installation\r\n1. Install [Composer Dependency Manager](https://getcomposer.org/) and add it to system path.\r\n2. Github has a limited daily limit for unauthorized requests, so we should create a token for composer.\r\n[Add composer](https://github.com/settings/tokens/new) to your github authorized applications and run the following command in terminal:\r\n\r\n ```\r\ncomposer -g config github-oauth.github.com YOUR_KEY_HERE\r\n ```\r\n\r\n## TM modules installation\r\n1. Create `vendor` folder and `composer.json` file in previously created `magento` folder:\r\n ```\r\nmagento\r\n vendor\r\n composer.json\r\n ```\r\n\r\n composer.json content:\r\n ```\r\n{\r\n    \"minimum-stability\": \"dev\",\r\n    \"require\": {\r\n        \"magento-hackathon/composer-command-integrator\":\"*\",\r\n        \"magento-hackathon/magento-composer-installer\": \"*\",\r\n        \"tm/argento\": \"*\",\r\n        \"tm/argento_mage2cloud\": \"*\",\r\n        \"tm/cache\": \"*\",\r\n        \"tm/easylightbox\": \"*\",\r\n        \"tm/easynavigation\": \"*\",\r\n        \"tm/firecheckout\": \"*\",\r\n        \"tm/helpdesk\": \"*\",\r\n        \"tm/prozoom\": \"*\",\r\n        \"tm/quickshopping\": \"*\",\r\n        \"tm/smartsuggest\": \"*\",\r\n        \"tm/templatef001\": \"*\",\r\n        \"tm/templatef002\": \"*\",\r\n        \"tm/templatem001\": \"*\"\r\n    },\r\n    \"repositories\": [\r\n        {\r\n            \"type\": \"composer\",\r\n            \"url\": \"http://tmhub.github.io/packages\"\r\n        }\r\n    ],\r\n    \"extra\": {\r\n        \"magento-root-dir\": \"htdocs/\",\r\n        \"magento-deploystrategy\": \"symlink\",\r\n        \"magento-force\": true\r\n    },\r\n    \"config\": {\r\n        \"discard-changes\": true\r\n    }\r\n}\r\n ```\r\n\r\n2. Run the following commands from terminal:\r\n ```\r\ncd PUBLIC_FOLDER/magento\r\ncomposer install\r\n ```\r\n \r\n## Updating [TM packages](https://github.com/tmhub/packages) repository\r\n1. Install [satis](https://github.com/composer/satis) and add it to system path\r\n2. Clone [tmhub/packages](https://github.com/tmhub/packages) repository\r\n3. cd into cloned repository and run `satis build satis.json .`\r\n4. Push generated files to github\r\n\r\n## FAQ\r\n### How can I detect what modules what modified but not published to github yet?\r\nI recommend to initialize a repository inside `magento/vendor/tm` folder and add every module as submodule.\r\n```\r\ncd PUBLIC_FOLDER/magento/vendor/tm\r\ngit init\r\nfor module in *; do git submodule add \"./$module\"; done;\r\n```\r\n\r\nUse `git status` command to see what module was modified.\r\nAfter the changes where published on github, call `git add changed_module` and `git commit -m \"Module update\"`.\r\n\r\n### Creating symlinks on Windows7 as regular user\r\n1. Launch `secpol.msc` via `Win+R` or `Start → Run`.\r\n2. Open `Security Settings → Local Policies → User Rights Assignment`.\r\n3. In the list, find the \"Create symbolic links\" item.\r\n4. Double-click on the item and add yourself (or the whole Users group) to the list.\r\n\r\nThe changes will apply when you log out and log in again. [Source](http://superuser.com/questions/124679/how-do-i-create-a-link-in-windows-7-home-premium-as-a-regular-user#125981)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}